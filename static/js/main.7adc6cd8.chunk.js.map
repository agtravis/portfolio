{"version":3,"sources":["context/PortfolioContext.js","components/Header/index.js","components/ProjectList/index.js","pages/About/index.js","pages/Contact/index.js","pages/Home/index.js","components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["PortfolioContext","React","createContext","portfolio","title","href","github","description","screenshot","Header","className","id","to","ProjectList","useContext","reverse","map","project","index","key","src","alt","About","Contact","Home","Navbar","linkStyle","color","fontWeight","style","App","Provider","value","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7adc6cd8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PortfolioContext = React.createContext({\r\n  portfolio: [\r\n    {\r\n      title: 'Password Generator',\r\n      href: 'https://agtravis.github.io/homework-week-3/index.html',\r\n      github: 'https://github.com/agtravis/homework-week-3',\r\n      description:\r\n        'A random password generator with user input and rules defining the result',\r\n      screenshot: 'assets/images/password-generator.PNG',\r\n    },\r\n    {\r\n      title: 'Timed Quiz',\r\n      href: 'https://agtravis.github.io/homework-week-4/index.html',\r\n      github: 'https://github.com/agtravis/homework-week-4',\r\n      description:\r\n        'Test yourself on multiple topics, with conditional scoring and distinctive local storage high-scores',\r\n      screenshot: 'assets/images/timed-quiz.png',\r\n    },\r\n    {\r\n      title: 'Day Planner',\r\n      href: 'https://agtravis.github.io/homework-week-5/index.html',\r\n      github: 'https://github.com/agtravis/homework-week-5',\r\n      description:\r\n        'A daily planner for office hours with local storage conditional time-slots for any date',\r\n      screenshot: 'assets/images/day-planner.png',\r\n    },\r\n    {\r\n      title: 'Weather Dashboard',\r\n      href: 'https://agtravis.github.io/homework-week-6/index.html',\r\n      github: 'https://github.com/agtravis/homework-week-6',\r\n      description:\r\n        'A weather forecast tool with 3rd party API queries & geolocation',\r\n      screenshot: 'assets/images/weather-dashboard.png',\r\n    },\r\n    {\r\n      title: 'Pocket Bartender',\r\n      href: 'https://agtravis.github.io/pocket-bartender/index.html',\r\n      github: 'https://github.com/agtravis/pocket-bartender',\r\n      description:\r\n        'Mobile first app with API queries & local storage for inspiration with home cocktailing',\r\n      screenshot: 'assets/images/pocket-bartender.png',\r\n    },\r\n    {\r\n      title: 'Resume Generator',\r\n      href: 'https://github.com/agtravis/node-resume-generator',\r\n      github: 'https://github.com/agtravis/node-resume-generator',\r\n      description:\r\n        'CLI to run with Node.JS that uses the GitHub API to generate a PDF resume with theme selection',\r\n      screenshot: 'assets/images/node-resume-generator.png',\r\n    },\r\n    {\r\n      title: 'Dev-Team Builder',\r\n      href: 'https://github.com/agtravis/employee-summary-team-builder',\r\n      github: 'https://github.com/agtravis/employee-summary-team-builder',\r\n      description:\r\n        'CLI to run with Node.JS that takes user input to assemble a project team, uses regex validation',\r\n      screenshot: 'assets/images/employee-summary-team-builder.png',\r\n    },\r\n    {\r\n      title: 'Note Taker',\r\n      href: 'https://agtravis-note-taker.herokuapp.com/',\r\n      github: 'https://github.com/agtravis/note-taker',\r\n      description:\r\n        'Heroku deployed app written in JavaScript for Node.JS that runs in the browser and stores user input on a server',\r\n      screenshot: 'assets/images/enter-notes.PNG',\r\n    },\r\n    {\r\n      title: 'Employee Tracker',\r\n      href: 'https://github.com/agtravis/employee-tracker',\r\n      github: 'https://github.com/agtravis/employee-tracker',\r\n      description:\r\n        'CLI running in Node.JS that navigates a SQL DB where a user can manage a team of employees, CRUD features',\r\n      screenshot: 'assets/images/employee-tracker.png',\r\n    },\r\n    {\r\n      title: 'Burger App',\r\n      href: 'https://agtravis-burger.herokuapp.com/',\r\n      github: 'https://github.com/agtravis/burger',\r\n      description:\r\n        'An app that runs in the browser via Heroku and utilizing SQL and CRUD operations to create a fun UI',\r\n      screenshot: 'assets/images/burger-app.png',\r\n    },\r\n    {\r\n      title: 'Rinqydink Arcade',\r\n      href: 'https://rinqydinky.herokuapp.com/',\r\n      github: 'https://github.com/agtravis/RINQYDINK',\r\n      description:\r\n        'An online gaming community featuring games, chat, member profiles with high scores. Games written in JS',\r\n      screenshot: 'assets/images/game-chat.png',\r\n    },\r\n    {\r\n      title: 'Workout Tracker',\r\n      href: 'https://agtravis-workout-tracker.herokuapp.com/',\r\n      github: 'https://github.com/agtravis/workout-tracker',\r\n      description:\r\n        'A graphical interface for users to be able to track their fitness using MongoDB and Mongoose',\r\n      screenshot: 'assets/images/workout-tracker.PNG',\r\n    },\r\n  ],\r\n});\r\n\r\nexport default PortfolioContext;\r\n","import React from 'react';\nimport './style.css';\nimport { Link } from 'react-router-dom';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Header() {\n  return (\n    <header>\n      <div className=\"container small-screen\">\n        <div className=\"row\">\n          <div id=\"company-name\" className=\"col s12 m12 l12\">\n            <Link to=\"/\">\n              <h1>George Travis</h1>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <div className=\"large-screen\">\n        <div id=\"code-wrapper\">\n          <p className=\"code\">{`(`}</p>\n          <Link to=\"/\">\n            <div className=\"code-p-div\">\n              <p className=\"code-p\">George</p>\n              <p className=\"code-p\">Travis</p>\n            </div>\n          </Link>\n          <p className=\"code\">{`)`}</p>\n          <p className=\"code\">{`=>`}</p>\n          <p className=\"code\">{`{`}</p>\n          <div id=\"function\">\n            <Link to=\"/about\">\n              <p className=\"function-block\">About Me</p>\n            </Link>\n            <Link to=\"projectlist\">\n              <p className=\"function-block\">My Portfolio</p>\n            </Link>\n            <Link to=\"contact\">\n              <p className=\"function-block\">Contact Me</p>\n            </Link>\n          </div>\n          <p className=\"code\">{`}`}</p>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useContext } from 'react';\r\nimport PortfolioContext from '../../context/PortfolioContext';\r\n\r\nfunction ProjectList() {\r\n  const portfolio = useContext(PortfolioContext);\r\n\r\n  return (\r\n    <ul>\r\n      {portfolio.reverse().map((project, index) => (\r\n        <li key={index}>\r\n          {project.title}\r\n          <br />\r\n          {project.screenshot}\r\n          <br />\r\n          <img src={project.screenshot} alt={project.title} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n  return <p>About</p>;\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nfunction Contact() {\r\n  return <p>Contact</p>;\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Home() {\r\n  return <h1>Welcome!!</h1>;\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './style.css';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n  const linkStyle = {\n    color: '#272b4b',\n    fontWeight: 'bolder',\n  };\n\n  return (\n    <nav className=\"small-screen\">\n      <p>\n        <Link style={linkStyle} to=\"/about\">\n          About\n        </Link>\n      </p>\n      <p>\n        <Link style={linkStyle} to=\"/projectlist\">\n          Portfolio\n        </Link>\n      </p>\n      <p>\n        <Link style={linkStyle} to=\"/contact\">\n          Contact\n        </Link>\n      </p>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { useContext } from 'react';\nimport { Route, HashRouter as Router } from 'react-router-dom';\nimport PortfolioContext from './context/PortfolioContext';\nimport Header from './components/Header';\nimport ProjectList from './components/ProjectList';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Home from './pages/Home';\nimport NavBar from './components/Navbar';\n\nfunction App() {\n  const { portfolio } = useContext(PortfolioContext);\n\n  return (\n    <PortfolioContext.Provider value={portfolio}>\n      <Router>\n        <Header />\n        <NavBar />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/projectlist\" component={ProjectList} />\n        <Route exact path=\"/contact\" component={Contact} />\n      </Router>\n    </PortfolioContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}